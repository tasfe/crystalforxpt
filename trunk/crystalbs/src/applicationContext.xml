<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
 	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 加载数据库配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties"/>
	</bean>

	<!-- jdbc数据库源 -->
	<bean id="jdbcSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="jdbcSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>classpath*:com/netblizzard/crystal/hibernate/pojo/*.hbm.xml</value>
			</list>
		</property>
	</bean>
    
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">   
		<property name="sessionFactory">   
	    	<ref bean="sessionFactory" />   
		</property>   
	</bean>
	
	<bean id="jdbcTemplate"	class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="jdbcSource"/>
		</property>
	</bean>
	
    <!-- Transactional advice -->   
    <tx:advice id="txAdvice" transaction-manager="transactionManager">   
        <tx:attributes>   
            <!-- methods starting with 'save', 'update' or 'remove' use the default transaction settings -->   
            <tx:method name="save*"/>   
            <tx:method name="update*"/>   
            <tx:method name="remove*"/>      
            <tx:method name="del*"/>
            <tx:method name="merge*"/>
            <!-- other methods are set to read only -->   
            <tx:method name="*" read-only="true"/>   
        </tx:attributes>   
    </tx:advice>  
    <!-- ensure that the above transactional advice runs for any execution   
    of an operation defined by specified interface -->   
    <aop:config proxy-target-class="true">    
        <aop:pointcut id="daoOperation"  
            expression="execution(* com.baseline.po.*DAO.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="daoOperation"/>
    </aop:config>   
  
	<bean id="BasicDao" class="com.netblizzard.common.core.dao.BaseDao">     
	    <property name="sessionFactory">     
	        <ref local="sessionFactory" />     
	    </property>     
	</bean>
	
	<bean id="BaseHibernateDAO" class="com.netblizzard.common.core.dao.BaseHibernateDAO">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
		<property name="jdbcTemplate">
			<ref local="jdbcTemplate" />
		</property>
	</bean>
	
	<bean id="baseService" class="com.netblizzard.common.core.service.BaseService">
		<property name="dao" ref="BaseHibernateDAO" />
	</bean>  
	
	<bean id="hibernateTemplate"
          class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory"> 
            <ref bean="sessionFactory"/>
        </property>            
    </bean> 
</beans>